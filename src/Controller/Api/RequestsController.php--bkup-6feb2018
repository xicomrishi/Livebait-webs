<?php

    namespace App\Controller\Api;

    use App\Controller\AppController;

    use Cake\Routing\Router;

    use Cake\Datasource\ConnectionManager;

    class RequestsController extends AppController {

        public function beforeFilter(\Cake\Event\Event $event) {
            parent::beforeFilter($event);                        
        }
        
        public function save(){
            $status = false;
            $message = "Call log could not be saved.";

            if($this->request->getData('quickblox_id')){
                $this->loadModel('User');
                $request = $this->request->getData();
                $request['from_user_id'] = $this->request->session()->read('AppUser.id');

                $to = $this->Users->find('all',['conditions'=>['quickblox_id'=>$request['quickblox_id']]])->first();

                $request['to_user_id'] = $to->id;

                $record = $this->Requests->newEntity();
                $record = $this->Requests->patchEntity($record,$request);

                if($this->Requests->save($record)){
                    if($record['status'] == 1){
                        $u = $this->Users->get($request['from_user_id']);
                        if($u['subscribed'] == 0)
                        {
                            if($u['unpaid_calls'] > 0)
                            {
                                $u->unpaid_calls = $u['unpaid_calls'] - 1;
                            }
                            else if($u['paid_calls'] > 0)
                            {
                                $u->paid_calls = $u['paid_calls'] - 1;
                            }
                            $this->Users->save($u);
                        }
                    }
                    if($record['status'] == 2){
                        $this->loadModel('UserNotInteresteds');
                        $user = $this->UserNotInteresteds->newEntity();

                        $row['user_from'] = $to->id;
                        $row['user_to'] = $this->request->session()->read('AppUser.id');

                        $user = $this->UserNotInteresteds->patchEntity($user,$row);

                        if($this->UserNotInteresteds->save($user)){
                            $user = $this->UserNotInteresteds->newEntity();
                            $row['user_to'] = $to->id;
                            $row['user_from'] = $this->request->session()->read('AppUser.id');

                            $user = $this->UserNotInteresteds->patchEntity($user,$row);
                            $this->UserNotInteresteds->save($user);
                        }
                    }
                    $status = true;
                    $message = "Call log saved successfully.";
                }
            }

            $this->response->type('json');
            echo json_encode(compact('status','message'));
            $this->response->send();                        
            exit;
        }

        public function sendDetail(){
            $status = false;
            $message = "Request could not be completed.";
            $stop = false;

            if($this->request->is('post')){
                $request = $this->request->getData();

                $this->loadModel('Users');
                $user = $this->Users->get($this->request->session()->read('AppUser.id'));
                $name = $user->username;

                if($request['type'] == 1){
                    if(empty($user->phone_number)){                        
                        $message = "Phone number doesn't exist.";
                        $stop = true;
                    }
                    else{                        
                        $data['phone_number'] = $user->phone_number;
                        $data['type'] = 1;
                        $data['message'] = $data['phone_number']."\n".$name." wants to share his/her number with you.";
                    }
                    
                }
                elseif($request['type'] != 2 || empty($request['address']) || empty($request['lat']) || empty($request['lon'])){
                    $stop = true;
                    $message = "Your location could not be share right now. Please try again later.";                    
                }
                else{                                        
                    $data = $request;
                    $data['message'] = $request['address']."\n".$name." wants to share his/her location with you.";
                }

                if(isset($request['user_id']) && !empty($request['user_id'])){
                    $receiver = $this->Users->get($request['user_id']);
                }

                if(!$stop && !empty($receiver->deviceToken) && !empty($receiver->deviceType)){
                    unset($data['user_id']);
                    unset($data['device_type']);

                    $this->loadComponent('Common');



                    if($receiver->deviceType == "A"){                        
                        $check = $this->Common->androidNotification($data,$receiver->deviceToken);
                    }
                    else{
                        $check = $this->Common->iosNotification($data,$receiver->deviceToken);
                    }

                    if($check){
                        $status = true;
                        $message = "Request successful";
                    }
                }                
            }

            $this->response->type('json');
            echo json_encode(compact('status','message'));
            $this->response->send();                        
            exit;
        }
    }
    